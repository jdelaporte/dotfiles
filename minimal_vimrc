" -------------------------------------------------------
"
"       EdTheDev's Minimal .vimrc 
"
" -------------------------------------------------------

" -----------------------------------------------------------------------
" Let the leader key be ,  
" -----------------------------------------------------------------------
let mapleader=","

" SpellCheck
se spell

" Needed for NERDCommenter:
"   provides fast easy commenting/uncommenting
"   using Leader+cc
" filetype plugin on

" Allow switching buffers without closing files.
set hidden

" =======================================================
" iPad and Android keyboards have no ESC Key
" =======================================================
" These are two slow..
"inoremap kj <Esc>
"inoremap jj <Esc>
"imap jj <Esc>
" map jk <esc>
" noremap ,e <esc>
" :imap ;; <esc>
" Just use Ctrl+[
inoremap ii <esc>

" =======================================================
"  Update screen title
" =======================================================
let &titlestring = hostname() . "[vim(" . expand("%:t") . ")]"
if &term == "screen"
	set t_ts=^[k
	set t_fs=^[\
endif
if &term == "screen" || &term == "xterm"
	set title
endif

" =======================================================
"  Text documents
" 	Treat most files like document files.
" 	Act as much like Microsoft Word as is reasonable.
" =======================================================

" Wrap lines like a text editor, not a code editor.
set wrap
set linebreak
set nolist
set lbr "don't wrap in the default, utterly stupid way.
" set paste " Expect to paste in text, when this is a normal text document.

" Do not add line breaks into newly entered text.
set wrapmargin=0
set textwidth=0

" Allow up and down into soft line wraps...
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

" Shared Clipboard
" set clipboard=unnamed

" Do not show line numbers
set nonumber

" Paste in text without too much trouble

" Fold based on indentation level.
set foldmethod=indent
" Expand all by default.
set foldlevel=20

" Use short tabs for text documents 
set tabstop=4 
set shiftwidth=4

" =======================================================
"  Autocompletion
" =======================================================

" Enable various types in omnicomplete
" -------------------------------------------------------
autocmd FileType python set omnifunc=pythoncomplete#Complete

" =======================================================
"  Python files
" =======================================================

" Show line numbers
au Filetype python setlocal number
" PEP8
au FileType python setlocal expandtab
au FileType python setlocal tabstop=4
au FileType python setlocal shiftwidth=4

" Never wrap lines...
au FileType python setlocal textwidth=0

" Do not set paste for Python files...
au FileType python setlocal nopaste

" Automatically highlight lines over 80 characters.
"    in Python files.
" Find lines that are too long
au FileType python let w:m1=matchadd('Search', '\%<81v.\%>77v', -1)
au BufWinEnter *.py let w:m1=matchadd('Search', '\%<81v.\%>77v', -1)
" Color lines that are too long them red.
au FileType python let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
au BufWinEnter *.py let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)

" =======================================================

"    Status Line
" -----------------------------------------------------------------
"
" A nice status line.
" set statusline=%F%m%r%h%w\ [type=%Y]\ [%p%%]\ [len=%L]
" set laststatus=2 " Always show the statusline on the 2nd last row


" automatically reload vimrc when it's saved
" au BufWritePost .vimrc so ~/.vimrc

set laststatus=2
set statusline=
set statusline +=%1*
set statusline +=b%n            "buffer number
set statusline +=\  
set statusline +=%F%m%r%h%w
set statusline +=\  
set statusline +=%l\/%L          
set statusline +=%4v              "virtual column number
set statusline +=%1*                     " return to background color
" set statusline +=%2*%m%*                "modified flag
" set statusline+=%{rvm#statusline()}  
" set statusline+=[%{strlen(&fenc)?&fenc:&enc}]
" set statusline+=%{fugitive#statusline()}\    
" set statusline +=%5*%{&ff}%*            "file format
" set statusline +=%3*%y%*                "file type
" set statusline +=%2*0x%04B\ %*          "character under cursor

" Orphaned setting
filetype on

" Sort lines!!
:map <Leader>ss :'<,'> !sort<Cr>

" -----------------------------------------------------------------------
"
"   " Some Python specific stuff
"
" -----------------------------------------------------------------------
" :map <Leader>pc :!check-script %:p:h/%<Cr>
:map <Leader>pc :!hg ci%<Cr>
:map <Leader>pd :!pydoc %:r<Cr>
:map <Leader>pe :!tail /var/log/apache2/error.log
:map <Leader>ph :!check-script --html %<Cr>
:map <Leader>pm :!listmethods %<Cr>
" :map <Leader>pl :!pylib 
:map <Leader>pl :!pylint % > /tmp/out.txt<Cr>:e /tmp/out.txt<Cr>
:map <Leader>pn :set nu!
" :map <Leader>pr :!sudo /etc/init.d/apache2 restart<Cr>

" :map <Leader>pv :!w3m http://192.168.1.9/scripts<Cr> 
:map <Leader>pr :!python % 

" ex mode commands made easy
nnoremap ; :

" Go to home and end using capitalized directions
noremap H ^
noremap L $

set scrolloff=8         " Number of lines from vertical edge to start scrolling
set sidescrolloff=15 " Number of cols from horizontal edge to start scrolling
set sidescroll=1       " Number of cols to scroll at a time

" Force period and parens to deliniate words
" set iskeyword-=\.
" set iskeyword-=\(
" set iskeyword-=\)


"   Suck less at Backups.
" -----------------------------------------------------------------------
" Put backup and swap files into .backup in current directory if it exists.
"   Otherwise drop them in the system temporary directory.
set backupdir=./.backup,/tmp
set directory=./.backup,/tmp

" 	Appearance   
" -----------------------------------------------------------------------

set cursorline
hi CursorLine guibg=#2d2d2d
set ruler
" set textwidth=8000
set vb t_vb= "Flash instead of beep.
" 	Editing
" -----------------------------------------------------------------------
"
"
" Tired of typing :Wq
cnoreabbrev W w

" :map <Leader>h ^
" map <Leader>. $
" Make backspace work like most other apps.
" set backspace=2 " make backspace work like most other apps
set backspace=indent,eol,start

set ignorecase
set nocompatible "Don't emulate old vi bugs.
set showmatch "Parenthesis matching.
"set pastetoggle=<C-P> " Ctrl-P toggles paste mode
"set paste "Don't suck at pasting in text.
" set foldmethod=marker -- breaks on some systems
set incsearch "Search as I type
nmap H ^ 
nmap L $ 

" =======================================================
" Editing with Tabs
" =======================================================

"   Indentation is great.
"-----------------------------------------------------------------------
set smartindent
filetype indent on

" Re-select visual block after indent/outdent.
vnoremap < <gv
vnoremap > >gv

" =======================================================
" Highlighting
" =======================================================

syntax enable 
" Recognize some file types...
au BufNewFile,BufRead *.txt set filetype=txt
" au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}   set filetype=mkd

